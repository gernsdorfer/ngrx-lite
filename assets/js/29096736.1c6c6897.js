"use strict";(self.webpackChunkngrx_lite=self.webpackChunkngrx_lite||[]).push([[324],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=o.createContext({}),g=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=g(e.components);return o.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=g(r),m=n,d=u["".concat(i,".").concat(m)]||u[m]||c[m]||a;return r?o.createElement(d,s(s({ref:t},p),{},{components:r})):o.createElement(d,s({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var g=2;g<a;g++)s[g]=r[g];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8724:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>g,toc:()=>p});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),s=["components"],l={sidebar_position:1},i="Storage",g={unversionedId:"plugins/storage",id:"plugins/storage",title:"Storage",description:"Demo",source:"@site/docs/plugins/storage.md",sourceDirName:"plugins",slug:"/plugins/storage",permalink:"/ngrx-lite/docs/plugins/storage",editUrl:"https://github.com/gernsdorfer/ngrx-lite/edit/master/apps/doc-app/docs/plugins/storage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Testing",permalink:"/ngrx-lite/docs/testing"},next:{title:"StoreFactory",permalink:"/ngrx-lite/docs/api/store-factory"}},p=[{value:"Session Storage",id:"session-storage",children:[{value:"install Session Storage",id:"install-session-storage",children:[],level:3},{value:"create a new Store sync to Session Storage",id:"create-a-new-store-sync-to-session-storage",children:[],level:3},{value:"write a Custom Session Storage",id:"write-a-custom-session-storage",children:[],level:3}],level:2},{value:"Local Storage",id:"local-storage",children:[{value:"install Local Storage",id:"install-local-storage",children:[],level:3},{value:"create a new Store sync to Local Storage",id:"create-a-new-store-sync-to-local-storage",children:[],level:3},{value:"write a Custom Local Storage",id:"write-a-custom-local-storage",children:[],level:3}],level:2}],c={toc:p};function u(e){var t=e.components,r=(0,n.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storage"},"Storage"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://gernsdorfer.github.io/ngrx-lite/sample-app/storage-from-service"},"Demo")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/gernsdorfer/ngrx-lite/tree/master/apps/stackblitz-app/src/app/storage"},"Demo-Code")),(0,a.kt)("h2",{id:"session-storage"},"Session Storage"),(0,a.kt)("p",null,"Store your State in the Client Session Storage"),(0,a.kt)("h3",{id:"install-session-storage"},"install Session Storage"),(0,a.kt)("p",null,"provide ",(0,a.kt)("inlineCode",{parentName:"p"},"SessionStoragePlugin")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"sessionStoragePlugin")," in your root module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'},"import {NgModule} from '@angular/core';\nimport {\n  SessionStoragePlugin,\n  sessionStoragePlugin\n} from '@gernsdorfer/ngrx-lite';\n\n@NgModule({\n  providers: [\n    {provide: SessionStoragePlugin, useValue: sessionStoragePlugin}\n  ]\n})\nexport class AppModule {\n}\n")),(0,a.kt)("h3",{id:"create-a-new-store-sync-to-session-storage"},"create a new Store sync to Session Storage"),(0,a.kt)("p",null,"Based on ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/store-factory#createStore"},"Created Store")," you can add the storage option ",(0,a.kt)("inlineCode",{parentName:"p"},"localStoragePlugin")," for the new Store.\nThe data will write and read from the SessionStorage the Session Storage Key is the StoreName in the Example above it's named ",(0,a.kt)("inlineCode",{parentName:"p"},"myStore")," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.component.ts"',title:'"app.component.ts"'},"export class AppComponent {\n  myStore = this.storeFactory.createStore<string, string>('myStore', {storage: 'localStoragePlugin'});\n\n  constructor(private storeFactory: StoreFactory) {\n  }\n}\n")),(0,a.kt)("h3",{id:"write-a-custom-session-storage"},"write a Custom Session Storage"),(0,a.kt)("p",null,"To write your own Session Storage, you muss create Service implement's the "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="my-session-storage.plugin.ts"',title:'"my-session-storage.plugin.ts"'},"import { ClientStoragePlugin } from '@gernsdorfer/ngrx-lite';\n\nclass MySessionStoragePlugin implements ClientStoragePlugin {\n  getDefaultState<T, E>(storeName: string): StoreState<T, E> | undefined {\n   // Your Busincess Logic\n  }\n\n  setStateToStorage<T, E>(storeName: string, state: StoreState<T, E>) {\n    // Your Busincess Logic\n  }\n} \n")),(0,a.kt)("p",null,"and provide this new Storage in your root Module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'},"import {NgModule} from '@angular/core';\nimport {\n  SessionStoragePlugin,\n  sessionStoragePlugin\n} from '@gernsdorfer/ngrx-lite';\nimport {MySessionStoragePlugin} from './my-session-storage.plugin.ts';\n\n@NgModule({\n  providers: [\n    {provide: SessionStoragePlugin, useClass: MySessionStoragePlugin}\n  ]\n})\nexport class AppModule {\n}\n")),(0,a.kt)("h2",{id:"local-storage"},"Local Storage"),(0,a.kt)("p",null,"Store your State in the Client Local Storage"),(0,a.kt)("h3",{id:"install-local-storage"},"install Local Storage"),(0,a.kt)("p",null,"provide ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalStoragePlugin")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalStoragePlugin")," in your root module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'},"import {NgModule} from '@angular/core';\nimport {\n  LocalStoragePlugin,\n  LocalStoragePlugin\n} from '@gernsdorfer/ngrx-lite';\n\n@NgModule({\n  providers: [\n    {provide: LocalStoragePlugin, useValue: LocalStoragePlugin}\n  ]\n})\nexport class AppModule {\n}\n")),(0,a.kt)("h3",{id:"create-a-new-store-sync-to-local-storage"},"create a new Store sync to Local Storage"),(0,a.kt)("p",null,"Based on ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/store-factory#createStore"},"Created Store")," you can add the storage option ",(0,a.kt)("inlineCode",{parentName:"p"},"localStoragePlugin")," for the new Store.\nThe data will write and read from the LocalStorage the Local Storage Key is the StoreName in the Example above it's named ",(0,a.kt)("inlineCode",{parentName:"p"},"myStore")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.component.ts"',title:'"app.component.ts"'},"export class AppComponent {\n  myStore = this.storeFactory.createStore<string, string>('myStore', {storage: 'localStoragePlugin'});\n\n  constructor(private storeFactory: StoreFactory) {\n  }\n}\n")),(0,a.kt)("h3",{id:"write-a-custom-local-storage"},"write a Custom Local Storage"),(0,a.kt)("p",null,"To write your own Local Storage, you muss create Service implement's the"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="my-Local-storage.plugin.ts"',title:'"my-Local-storage.plugin.ts"'},"import { ClientStoragePlugin } from '@gernsdorfer/ngrx-lite';\n\nclass MyLocalStoragePlugin implements ClientStoragePlugin {\n  getDefaultState<T, E>(storeName: string): StoreState<T, E> | undefined {\n   // Your Busincess Logic\n  }\n\n  setStateToStorage<T, E>(storeName: string, state: StoreState<T, E>) {\n    // Your Busincess Logic\n  }\n} \n")),(0,a.kt)("p",null,"and provide this new Storage in your root Module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'},"import {NgModule} from '@angular/core';\nimport {\n  LocalStoragePlugin,\n  LocalStoragePlugin\n} from '@gernsdorfer/ngrx-lite';\nimport {MyLocalStoragePlugin} from './my-Local-storage.plugin.ts';\n\n@NgModule({\n  providers: [\n    {provide: LocalStoragePlugin, useClass: MyLocalStoragePlugin}\n  ]\n})\nexport class AppModule {\n}\n")))}u.isMDXComponent=!0}}]);