"use strict";(self.webpackChunkdoc_app=self.webpackChunkdoc_app||[]).push([[346],{7986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var o=n(1085),r=n(1184);const s={sidebar_position:2},c="ComponentStore",a={id:"api/component-store",title:"ComponentStore",description:"The Store is a wrapper on the ngrx Component Store. You have the exact same API",source:"@site/docs/api/component-store.md",sourceDirName:"api",slug:"/api/component-store",permalink:"/ngrx-lite/docs/api/component-store",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/component-store.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"StoreFactory",permalink:"/ngrx-lite/docs/api/store-factory"},next:{title:"ComponentLoadingStore",permalink:"/ngrx-lite/docs/api/component-loading-store"}},i={},p=[{value:"<code>state$</code>",id:"state",level:2},{value:"<code>state</code>",id:"state-1",level:2},{value:"<code>setState</code>",id:"setstate",level:2},{value:"<code>patchState</code>",id:"patchstate",level:2},{value:"<code>createEffect</code>",id:"createeffect",level:2},{value:"<code>onActions</code>",id:"onactions",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"componentstore",children:"ComponentStore"}),"\n",(0,o.jsxs)(t.p,{children:["The Store is a wrapper on the ",(0,o.jsx)(t.a,{href:"https://ngrx.io/guide/component-store",children:"ngrx Component Store"}),". You have the exact same API\nwith some extra Stuff. The extra Stuff you can find below."]}),"\n",(0,o.jsx)(t.h2,{id:"state",children:(0,o.jsx)(t.code,{children:"state$"})}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"state$"})," property is a wrapper of the ",(0,o.jsx)(t.a,{href:"https://ngrx.io/guide/component-store",children:"ngrx Component Store"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="app.component.ts"',children:"interface MyState {\n  counter: number;\n}\n\nexport class AppComponent {\n  private store = this.storeFactory.createComponentStore<MyState>({\n    storeName: 'BASIC_COUNTER',\n    defaultState: { counter: 0 },\n  });\n  public state$: Observable<MyState> = this.store.state$;\n\n  constructor(private storeFactory: StoreFactory) {}\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"state-1",children:(0,o.jsx)(t.code,{children:"state"})}),"\n",(0,o.jsx)(t.p,{children:"Read your State with signal assignment"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="app.component.ts"',children:"interface MyState {\n  counter: number;\n}\n\nexport class AppComponent {\n  private store = this.storeFactory.createComponentStore<MyState>({\n    storeName: 'BASIC_COUNTER',\n    defaultState: { counter: 0 },\n  });\n  public state: MyState = this.counterStore.state;\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"setstate",children:(0,o.jsx)(t.code,{children:"setState"})}),"\n",(0,o.jsxs)(t.p,{children:["Update the complete state with the Action name ",(0,o.jsx)(t.code,{children:"UPDATE_NAME"})," or a custom action name for find your changes in the\ndevtools or to share your action"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="app.component.ts"',children:"interface MyState {\n  counter: number;\n}\n\nexport class AppComponent {\n  private store = this.storeFactory.createComponentStore<MyState>({\n    storeName: 'BASIC_COUNTER',\n    defaultState: { counter: 0 },\n  });\n\n  constructor(private storeFactory: StoreFactory) {}\n\n  change(counter: number) {\n    // Patch State with unkown Action\n    this.store.setState({ counter: 2 });\n  }\n\n  changeWithCustomAction(counter: number) {\n    // Use custom Action for\n    this.store.setState({ counter: 2 }, 'CUSTOM_SET_STATE_NAME');\n  }\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"patchstate",children:(0,o.jsx)(t.code,{children:"patchState"})}),"\n",(0,o.jsxs)(t.p,{children:["patch partial State with Action name ",(0,o.jsx)(t.code,{children:"PATCH_NAME"})," or a custom action name for find your changes in the devtools or to\nshare your action"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="app.component.ts"',children:"interface MyState {\n  counter: number;\n}\n\nexport class AppComponent {\n  private store = this.storeFactory.createComponentStore<MyState>({\n    storeName: 'BASIC_COUNTER',\n    defaultState: { counter: 0 },\n  });\n\n  constructor(private storeFactory: StoreFactory) {}\n\n  change() {\n    this.store.patchState({ counter: 1 });\n  }\n\n  change(counter: number) {\n    // Use custom Action\n    this.store.setState({ counter: 2 }, 'CUSTOM_PATCH_STATE_NAME');\n  }\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"createeffect",children:(0,o.jsx)(t.code,{children:"createEffect"})}),"\n",(0,o.jsxs)(t.p,{children:["For Using ",(0,o.jsx)(t.code,{children:"createEffect"}),", please install ",(0,o.jsx)(t.code,{children:"@ngrx/effects"})," and import ",(0,o.jsx)(t.code,{children:"EffectsModule.forRoot([])"})," in your root module"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="my-component-store.service.ts"',children:"export interface MyState {\n  counter: number;\n}\nexport const resetAction = createAction('reset');\n\n@Injectable()\nexport class MyStore implements OnDestroy {\n  private store = this.storeFactory.createComponentStore<MyState>({\n    storeName: 'BASIC_COUNTER',\n    defaultState: { counter: 0 },\n  });\n\n  reset = this.store\n    //create an Effect\n    .createEffect((action) =>\n      action.pipe(\n        //filter for Actions\n        ofType(resetAction),\n        //change your state\n        tap(() => this.store.setState({ counter: 0 }, 'RESET')),\n      ),\n    );\n  constructor(private storeFactory: StoreFactory) {}\n\n  ngOnDestroy() {\n    this.store.ngOnDestroy();\n  }\n}\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["It's necessary to destroy your store after your component destroyed, to stop the created effect.\nHere you muss call the ",(0,o.jsx)(t.code,{children:"ngOnDestroy"}),"."]})}),"\n",(0,o.jsx)(t.h2,{id:"onactions",children:(0,o.jsx)(t.code,{children:"onActions"})}),"\n",(0,o.jsx)(t.p,{children:"listen on custom actions to execute your business logic"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="my-component-store.service.ts"',children:"export interface MyState {\n  counter: number;\n}\nexport const resetAction = createAction('reset');\n\n@Injectable()\nexport class MyStore implements OnDestroy {\n  private storeFactory = inject(StoreFactory);\n  private store = this.storeFactory.createComponentStore<MyState>({\n    storeName: 'BASIC_COUNTER',\n    defaultState: { counter: 0 },\n  });\n\n  onReset = this.store.onActions([resetAction]);\n}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="app.component.ts"',children:"export class AppComponent {\n  private myStore = inject(MyStore);\n  resetEffect = this.myStore.onReset(() => console.log('Reset was triggered'));\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var o=n(4041);const r={},s=o.createContext(r);function c(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);