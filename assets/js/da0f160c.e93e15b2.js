"use strict";(self.webpackChunkdoc_app=self.webpackChunkdoc_app||[]).push([[544],{708:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=o(2322),r=o(5392);const a={sidebar_position:3},s="ComponentLoadingStore",i={id:"api/component-loading-store",title:"ComponentLoadingStore",description:"The LoadingStore is based on ngrx-lite/component-store",source:"@site/docs/api/component-loading-store.md",sourceDirName:"api",slug:"/api/component-loading-store",permalink:"/ngrx-lite/docs/api/component-loading-store",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/component-loading-store.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"ComponentStore",permalink:"/ngrx-lite/docs/api/component-store"},next:{title:"Actions",permalink:"/ngrx-lite/docs/api/actions"}},c={},l=[{value:"loadingEffect",id:"loadingeffect",level:2},{value:"Example for a successfully callback Observable",id:"example-for-a-successfully-callback-observable",level:3},{value:"Example for a Error Callback Observable",id:"example-for-a-error-callback-observable",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"componentloadingstore",children:"ComponentLoadingStore"}),"\n",(0,t.jsxs)(n.p,{children:["The LoadingStore is based on ",(0,t.jsx)(n.a,{href:"/docs/api/component-store",children:"ngrx-lite/component-store"}),"\nYou have the exact same API with ",(0,t.jsx)(n.code,{children:"createLoadingEffect"})]}),"\n",(0,t.jsx)(n.h2,{id:"loadingeffect",children:"loadingEffect"}),"\n",(0,t.jsxs)(n.p,{children:["Create your custom loadEffect.The lib set's loader state while effect is running. Here you must define your EffectName, in\nthis Example below it's ",(0,t.jsx)(n.code,{children:"LOAD_NAME"}),", the callback Funtion is same API as ",(0,t.jsx)(n.a,{href:"https://ngrx.io/guide/component-store/effect",children:"@ngrx/component-store/effect"}),".\nA ",(0,t.jsx)(n.code,{children:"tapResponse"})," to change your state is not necessary. The Effects change your state out of the box, when your stream is done."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="app.component.ts"',children:"type State = LoadingStoreState<{ counter: number }, { message: string }>;\n\nexport class AppComponent {\n  private store = this.storeFactory.createComponentLoadingStore<State['item'], State['error']>({\n    storeName: 'LOADING_STORE',\n  });\n\n  nameEffect = this.store.loadingEffect('LOAD_NAME', (name: string) => of({ name: name }));\n\n  constructor(private storeFactory: StoreFactory) {}\n}\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.mdxAdmonitionTitle,{children:["Every Effect set ",(0,t.jsx)(n.code,{children:"isLoading"})," to ",(0,t.jsx)(n.code,{children:"true"})," during the effect is running. Here it's possible to show a loading"]}),(0,t.jsx)(n.p,{children:"indicator in your ui."})]}),"\n",(0,t.jsx)(n.h3,{id:"example-for-a-successfully-callback-observable",children:"Example for a successfully callback Observable"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"nameEffect = this.store.loadingEffect('LOAD_NAME', (name: string) => of({ name: name }));\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-for-a-error-callback-observable",children:"Example for a Error Callback Observable"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"nameEffect = this.store.loadingEffect('LOAD_NAME', (name: string) =>\n  throwError(() => {\n    errorCode: 'myError';\n  })\n);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},5392:(e,n,o)=>{o.d(n,{Z:()=>i,a:()=>s});var t=o(2784);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);